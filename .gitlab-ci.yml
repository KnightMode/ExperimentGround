image: alphine:3.7

variables:
  PACKAGE_PATH: /go/src/gitlab.com/ghanesh.balaji1995/dockerdeploytest

before_script:
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  - apt-get update -qq
  - apt-get install -qq git
  - 'which ssh-agent || ( apt-get install -qq openssh-client )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir ~/.ssh
  - ssh-keyscan -t rsa devsb01 >> ~/.ssh/known_hosts
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - git remote set-url origin git@gitlab.com/ghanesh.balaji1995/DockerDeployTest.git
  - mkdir -p /go/src/gitlab.com/dockerdeploytest /go/src/_/builds
  - cp -r ${CI_PROJECT_DIR} /go/src/gitlab.com/dockerdeploytest
  - ln -s /go/src/gitlab.com/dockerdeploytest $GOPATH/src/_/builds/dockerdeploytest
  - make dep

after_script:
  - ls

stages:
  - lint
  - test
  - build

lint:
  stage: lint
  image: golang:1.13
  script: go get -u golang.org/x/lint/golint && make lint

test:
  stage: test
  image: golang:1.13
  script:
    - go test ./...

build:
  image: golang:1.13
  stage: build
  script:
    - cd src && go build -o ./out/outputFile
  artifacts:
    paths:
      - src/out/
    expire_in: 1 week

publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t BINARY_NAME .
    - docker tag BINARY_NAME #USERNAME/TAGNAME
    - docker push #USERNAME/TAGNAME
  only:
    - master