image: alphine:3.7

variables:
  PACKAGE_PATH: /go/src/gitlab.com/ghanesh.balaji1995/dockerdeploytest

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - $CI_PROJECT_DIR/apt-cache
    - $CI_PROJECT_DIR/.go/src/github.com
    - $CI_PROJECT_DIR/.go/src/golang.org
    - $CI_PROJECT_DIR/.go/src/google.golang.org
    - $CI_PROJECT_DIR/.go/src/gopkg.in
    - $CI_PROJECT_DIR/.npm/

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

before_script:
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  - apt-get update -qq
  - apt-get install -qq git
  - 'which ssh-agent || ( apt-get install -qq openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - git remote set-url origin git@gitlab.com/ghanesh.balaji1995/DockerDeployTest.git
  - mkdir -p /go/src/gitlab.com/dockerdeploytest /go/src/_/builds
  - cp -r ${CI_PROJECT_DIR} /go/src/gitlab.com/dockerdeploytest
  - ln -s /go/src/gitlab.com/dockerdeploytest $GOPATH/src/_/builds/dockerdeploytest
  - make dep

stages:
  - lint
  - test
  - publish
  - deploy

lint:
  stage: lint
  extends: .go-cache
  image: golang:1.13
  script:  echo lint to be fixed

test:
  stage: test
  extends: .go-cache
  image: golang:1.13
  before_script:
    - echo testing
  script:
    - go test ./...

publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t $BINARY_NAME .
    - docker tag $BINARY_NAME shreegb/docker_deploy_test
    - docker push shreegb/docker_deploy_test
  only:
    - master

deploy:
  image: golang:1.13
  stage: deploy
  before_script:
    - apt-get update && apt install docker.io -y
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - cat ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
    - 'which rsync || ( apt-get update -y && apt-get install rsync -y )'
  script:
    - rsync -avuz --exclude=".*" deploy.sh $SERVER_USER@$SERVER_IP:/home/shreeghanesh
    - ssh -v -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP 'sh deploy.sh'